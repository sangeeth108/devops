pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials') // DockerHub credentials
        SERVER_CREDENTIALS = credentials('server-credentials') // Remote server credentials
        BACKEND_IMAGE = "sangeeth108/express-backend"
        FRONTEND_IMAGE = "sangeeth108/nextjs-frontend"
        REMOTE_HOST = "143.244.136.237"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }
        stage('Login to DockerHub') {
            steps {
                script {
                    // Docker login to DockerHub
                    sh """
                        echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
                    """
                }
            }
        }
        stage('Pull Backend and Frontend Images') {
            steps {
                script {
                    // Pull the backend and frontend images from DockerHub
                    sh """
                        docker pull ${BACKEND_IMAGE}
                        docker pull ${FRONTEND_IMAGE}
                    """
                }
            }
        }
        stage('Deploy to Remote Server') {
    steps {
        withCredentials([usernamePassword(credentialsId: 'server-credentials', usernameVariable: 'SSH_USER', passwordVariable: 'SSH_PASS')]) {
            sh """
            sshpass -p '${SSH_PASS}' ssh -o StrictHostKeyChecking=no ${SSH_USER}@${REMOTE_HOST} <<'EOF'
            # Pull backend and frontend images
            docker pull ${BACKEND_IMAGE}
            docker pull ${FRONTEND_IMAGE}

            # Stop and remove existing containers if they exist
            docker ps -a --filter "name=backend" --format '{{.ID}}' | xargs -r docker stop | xargs -r docker rm
            docker ps -a --filter "name=frontend" --format '{{.ID}}' | xargs -r docker stop | xargs -r docker rm

            # Run the containers
            docker run -d -p 5000:5000 --name backend ${BACKEND_IMAGE}
            docker run -d -p 3000:3000 --name frontend ${FRONTEND_IMAGE}
            EOF
            """
        }
    }
}



    }
}
