pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials') // DockerHub credentials
        SERVER_CREDENTIALS = credentials('server-credentials') // Remote server credentials
        BACKEND_IMAGE = "sangeeth108/express-backend"
        FRONTEND_IMAGE = "sangeeth108/nextjs-frontend"
        REMOTE_HOST = "143.244.136.237"
        DOCKER_BUILDKIT = '0'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('DockerHub Login') {
            steps {
                script {
                    sh '''
                        echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
                    '''
                }
            }
        }

        stage('Build and Push Backend Image') {
            steps {
                dir('Food Ordering Platform/backend') {
                    sh '''
                        docker build -t ${BACKEND_IMAGE} .
                        docker push ${BACKEND_IMAGE}
                    '''
                }
            }
        }

        stage('Build and Push Frontend Image') {
            steps {
                dir('Food Ordering Platform/frontend') {
                    sh '''
                        docker build -t ${FRONTEND_IMAGE} .
                        docker push ${FRONTEND_IMAGE}
                    '''
                }
            }
        }

        stage('Login to Remote Server') {
            steps {
                script {
                    // Test SSH connection to the remote server
                    sh """
                    sshpass -p '#San1224geeth' ssh -o StrictHostKeyChecking=no root@${REMOTE_HOST} 'echo Connected'
                    """
                }
            }
        }

        stage('Deploy to Remote Server') {
            steps {
                script {
                    // Pull images on the remote server
                    sh """
                    sshpass -p '#San1224geeth' ssh -o StrictHostKeyChecking=no root@${REMOTE_HOST} \
                    'docker pull ${BACKEND_IMAGE} && \
                    docker pull ${FRONTEND_IMAGE}'
                    """
                }
            }
        }

        stage('Remove Existing Containers') {
            steps {
                script {
                    // Remove existing containers if they exist
                    sh """
                    sshpass -p '#San1224geeth' ssh -o StrictHostKeyChecking=no root@${REMOTE_HOST} \
                    'docker rm -f backend || true && docker rm -f frontend || true'
                    """
                }
            }
        }

        stage('Deploy Backend') {
            steps {
                script {
                    // Deploy the backend
                    sh """
                    sshpass -p '#San1224geeth' ssh -o StrictHostKeyChecking=no root@${REMOTE_HOST} \
                    'docker run -d -p 5000:5000 --name backend ${BACKEND_IMAGE}'
                    """
                }
            }
        }

        stage('Deploy Frontend') {
            steps {
                script {
                    // Deploy the frontend
                    sh """
                    sshpass -p '#San1224geeth' ssh -o StrictHostKeyChecking=no root@${REMOTE_HOST} \
                    'docker run -d -p 3000:3000 --name frontend ${FRONTEND_IMAGE}'
                    """
                }
            }
        }
    }
}
